// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/all-genres": {
            "get": {
                "description": "Получение списка жанров",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genres"
                ],
                "summary": "Get genre",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/views.GenreView"
                            }
                        }
                    }
                }
            }
        },
        "/genre/add/": {
            "post": {
                "description": "Добавление жанра в базу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genres"
                ],
                "summary": "CreateGenre",
                "parameters": [
                    {
                        "description": "Сreating a genre",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/saveDTO.GenreDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/genre/{id}": {
            "get": {
                "description": "Получение жанра",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genres"
                ],
                "summary": "Get genre",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id genre",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.GenreView"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновление данных жанра",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genres"
                ],
                "summary": "UpdateGenres",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id genre",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New values",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Genre"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Удаление жанра из базы",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genres"
                ],
                "summary": "DeleteGenres",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id genre",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/movie/add/": {
            "post": {
                "description": "Добавление фильма в базу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "CreateMovie",
                "parameters": [
                    {
                        "description": "Title and description of the film",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/saveDTO.MovieDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/movie/{id}": {
            "get": {
                "description": "Получение фильма",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id movie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.MovieView"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновление данных фильма",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "UpdateMovie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id movie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New values",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Movie"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Удаление фильма из базы",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "DeleteMovie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id movie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "model.Genre": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Movie"
                    }
                },
                "name_genre": {
                    "type": "string"
                }
            }
        },
        "model.Movie": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Genre"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name_movie": {
                    "type": "string"
                }
            }
        },
        "saveDTO.GenreDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "saveDTO.MovieDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id_genres": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "views.GenreView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "views.MovieView": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.GenreView"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5050",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
