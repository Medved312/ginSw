definitions:
  saveDTO.CategoryDTO:
    properties:
      name:
        type: string
    type: object
  saveDTO.ProductDTO:
    properties:
      description:
        type: string
      idCategories:
        items:
          type: integer
        type: array
      name:
        type: string
    type: object
  views.CategoryView:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  views.ProductView:
    properties:
      Categories:
        items:
          $ref: '#/definitions/views.CategoryView'
        type: array
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:5050
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /all-categories:
    get:
      consumes:
      - application/json
      description: Получение списка категорий
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.CategoryView'
      summary: GetCategory
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление категории из базы
      parameters:
      - description: id категории
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: DeleteCategory
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: Получение жанра
      parameters:
      - description: id category
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.CategoryView'
      summary: GetCategory
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Обновление данных категории
      parameters:
      - description: id категории
        in: path
        name: id
        required: true
        type: integer
      - description: Новые значения
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/saveDTO.CategoryDTO'
      produces:
      - application/json
      responses: {}
      summary: UpdateCategory
      tags:
      - Category
  /category/add/:
    post:
      consumes:
      - application/json
      description: Добавление категории в базу
      parameters:
      - description: создание категории
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/saveDTO.CategoryDTO'
      produces:
      - application/json
      responses: {}
      summary: CreateCategory
      tags:
      - Category
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление продукта из базы
      parameters:
      - description: id продукта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: DeleteProduct
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Получение продукта
      parameters:
      - description: id продукта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.ProductView'
      summary: GetProduct
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Обновление данных продукта
      parameters:
      - description: id продукта
        in: path
        name: id
        required: true
        type: integer
      - description: Новые значения
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/saveDTO.ProductDTO'
      produces:
      - application/json
      responses: {}
      summary: UpdateProduct
      tags:
      - Product
  /product/add/:
    post:
      consumes:
      - application/json
      description: Добавление продукта в базу
      parameters:
      - description: создание продукта
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/saveDTO.ProductDTO'
      produces:
      - application/json
      responses: {}
      summary: CreateProduct
      tags:
      - Product
swagger: "2.0"
